name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions: 
  contents: read
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    #uses : Action을 불러옴
    # 해당 repository로 check-out하여 repository에 접근할 수 있는 Action을 불러옴
    - uses: actions/checkout@v4

    #jdk 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    #gradle 캐싱
    ##빌드 시간 단축
    - name: Gradle Caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    #test를 제외한 프로젝트 빌드  
    - name: Set execute permission for gradlew
      run: chmod +x gradlew 
    - name: Build with Gradle 
      run: ./gradlew build -x test

    - name: Make application-dev.yml
      run: |
        cd ./src/main/resources
        touch ./application-dev.yml
        echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
      shell: bash

    #Docker build & push
    # - name: Docker build & push 
    #   run: |
    #       docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    #       docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/rolling-paper .
    #       docker push ${{ secrets.DOCKER_REPO }}/rolling-paper

    #deploy 
    - name: Deploy 
      uses: appleboy/ssh-action@master
      id: deploy
      with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          username: ${{ secrets.USER }}
          envs: GITHUB_SHA
          script: |
            sudo docker-compose -f ../docker-compose.yml up
              
      

     
